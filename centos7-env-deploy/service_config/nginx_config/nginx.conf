#user  nobody;
worker_processes  4;

error_log  logs/error.log  notice;
pid        logs/nginx.pid;

events {
    worker_connections 1024;
}

http {

	default_type  application/octet-stream;
	include       mime.types;

	## 过滤掉非法的 Http Referer 来源 ##
	include http_referer_block.conf;
	## 过滤掉非法的 Http Referer 来源 ##

	## mobile useragent ##
	include mobile.useragent.conf;
	
	## 允许白名单搜索引擎蜘蛛（如 Googlebot、bingbot、Baiduspider）抓取 ##
	## 白名单搜索引擎 useragent ##
	include spider_white_list.conf;

	## 获取访问者的真实IP ##
	map $http_x_forwarded_for  $client_real_ip {
		""	$remote_addr;
		~^(?P<firstAddr>[0-9\.]+),?.*$	$firstAddr;
	}

	## 访问IP 白名单 ##
	geo $client_real_ip $is_white_ip { #这这里设置IP白名单 返回1 代表不拦截
		default 	0;
	  	include     geo_white_ip.conf;	
	}

	## 访问IP 黑名单 ##
	geo $client_real_ip $is_block_ip { #这这里设置IP黑名单 返回1 代表拦截
	    default		0;
	  	include     geo_block_ip.conf;
	}

	## 使用 CDN 来识别IP所属的区域##
	map $http_CF_IPCountry $is_white_country_code_cdn {
		default     	$is_white_ip;
		CN          	1;
		PH		1;
		XX				1;
	}

	##根据使用 GeoIP 库来识别IP所属的区域##
	geoip_country /opt/GeoIP.dat;
geoip_proxy 47.52.62.148;
geoip_proxy 47.52.139.16;
geoip_proxy 47.52.75.224;
geoip_proxy 47.91.239.80;
geoip_proxy 47.91.246.239;
geoip_proxy 47.75.175.82;
geoip_proxy 47.91.154.195;
geoip_proxy 47.75.145.235;
geoip_proxy 47.75.175.76;
geoip_proxy 47.75.115.173;
geoip_proxy 47.52.73.244;
geoip_proxy 47.52.188.15;
geoip_proxy 47.52.188.61;
geoip_proxy 103.255.47.107;
geoip_proxy 103.255.47.117;
geoip_proxy 103.255.47.119;
geoip_proxy 103.255.47.124;
geoip_proxy 103.255.47.126;
geoip_proxy 103.255.47.101;
geoip_proxy 218.145.64.202;
geoip_proxy 115.144.238.109;
geoip_proxy 222.231.9.70;
geoip_proxy 112.175.69.17;
geoip_proxy 103.101.177.178;
geoip_proxy 23.234.13.140;
geoip_proxy 23.234.51.53;
geoip_proxy 45.35.21.178;
geoip_proxy 162.251.94.125;
geoip_proxy 104.160.191.161;
geoip_proxy 107.167.3.234;
geoip_proxy 107.167.3.235;
geoip_proxy 64.32.22.64;
geoip_proxy 107.167.3.237;
geoip_proxy 203.78.143.76;

	#geoip_city    /opt/GeoLiteCity.dat;
	map $geoip_country_code $is_white_country_code { 
	#map $geoip_city_country_code $is_white_country_code { 
	    default     	$is_white_ip;
		CN          	1;
	#	PH		1;
		XX		1;
	}

	#CDN http
    log_format  main_official_http  '[remote_addr=$remote_addr, http_x_real_ip=$http_x_real_ip, addxff=$proxy_add_x_forwarded_for]$client_real_ip [$geoip_country_code] $remote_user [$time_local] "$request" $http_host '
        		'$status $upstream_status $body_bytes_sent "$http_referer"'
        		'"$http_user_agent” $ssl_protocol $ssl_cipher $upstream_addr '
        		'$request_time $upstream_response_time';

	#CDN http
    log_format  main_cdn_http  '$client_real_ip [$http_CF_IPCountry] $remote_user [$time_local] "$request" $http_host '
        		'$status $upstream_status $body_bytes_sent "$http_referer"'
        		'"$http_user_agent” $ssl_protocol $ssl_cipher $upstream_addr '
        		'$request_time $upstream_response_time';

	
	###################### upstream config ###############################
	##admin http upstream 
	upstream pc.http.upstream {
		server 127.0.0.1:8080;
	}
	##admin websocket upstream
	upstream pc.websocket.upstream {
		server 127.0.0.1:29157;
	}
	###################### upstream config ###############################

    sendfile        on;
    server_tokens off;
    keepalive_timeout 75;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 128k;
    large_client_header_buffers 4 128k;
    server_name_in_redirect off;
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    tcp_nopush     on;
    tcp_nodelay    on;

    gzip  on;                        
    gzip_min_length 1k;              
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 3;
    gzip_disable "MSIE [1-6].";
    gzip_types text/plain application/x-javascript text/css text/xml application/xml image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_proxied any;

    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_connect_timeout 300;       
    proxy_send_timeout 300;       
    proxy_read_timeout 300;           
    proxy_buffer_size 16k;          
    proxy_buffers 6 64k;            
    proxy_busy_buffers_size 128k;    
    proxy_temp_file_write_size 64k; 
    proxy_set_header   Host  $host;
    proxy_set_header   X-Real-IP  $client_real_ip;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Protocol  $scheme;
    open_file_cache max=204800 inactive=20s;
    open_file_cache_min_uses 1;
    open_file_cache_valid 60s;
    proxy_cache_path /opt/nginx/cache/proxy_cache levels=1:2 keys_zone=cache_one:100m inactive=1d max_size=30g; #100m和30G，按照服务要求，适当增大
    proxy_temp_path /opt/nginx/cache/proxy_temp;

	##################server default_server ###########
    server {
		listen 80 default_server;
		server_name _;
		access_log logs/undefined_access.log main_official_http;
		error_log  /dev/null crit;
		return 301 http://www.baidu.com;
    }

	##################静态资源 web ###################
	include static_file.server.conf;

	##################server pc web ###################
	include pc.server.conf;	
	
	##################agent server pc web ###################
	include pc.agent.server.conf;		
	include pc.agent2.server.conf;		

	################## ssl server pc web ###################
	#include pc.ssl.server.conf;
}
