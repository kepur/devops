user www www;
worker_processes auto;
error_log /opt/nginx/logs/error_nginx.log crit;
pid /var/run/nginx.pid;
worker_rlimit_nofile 91200;

events {
  use epoll;
  worker_connections 91200;
  multi_accept on;
}

http {
  include mime.types;
  map $HTTP_CF_CONNECTING_IP  $clientRealIp {
    ""    $remote_addr;
    ~^(?P<firstAddr>[0-9.]+),?.*$    $firstAddr;
  }
  log_format  main_cdn '$clientRealIp [$time_local] "$request" $http_host '
        		'$status $upstream_status $body_bytes_sent "$http_referer"'
        		'"$http_user_agent” $ssl_protocol $ssl_cipher $upstream_addr '
        		'$request_time $upstream_response_time';
  #'response_body:$resp_body';
  log_format  main_json escape=json '$clientRealIp |$remote_user [$time_local] | $request| $status |body_bytes_sent| $http_referer| $http_user_agent| http_x_forwarded_for | $request_body | $resp_body';
  default_type application/octet-stream;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 120;
  server_tokens off;
  tcp_nodelay on;

  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  fastcgi_intercept_errors on;

  #Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 9;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  #If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;
  #push_stream_shared_memory_size 100M;
##################过滤非法 Http Refer来源########
  include /opt/nginx/conf/vhost/http_referer_block.conf;
##允许白名单搜索引擎蜘蛛Googlebot bingbot baiduspider 抓取##
  include /opt/nginx/conf/vhost/spider_white_list.conf;
######################## default ############################
  server {
    listen 80;
    server_name _;
    access_log /opt/nginx/logs/nginx_undefine.access.log combined;
    error_log /opt/nginx/logs/nginx_error.log;
    #return 301 https://www.google.com/search?&q=motherfucker;
    return 301 https://previews.123rf.com/images/yummytime/yummytime1608/yummytime160800087/61820976-hand-showing-middle-finger-up-fuck-you-fuck-off-minimal-icon-created-for-mobile-web-decor-print-prod.jpg;
    #location /nginx_status {
    #  stub_status on;
    #  access_log off;
    #  allow 127.0.0.1;
    #  deny all;
    #}
    #location ~ [^/]\.php(/|$) {
    #  #fastcgi_pass remote_php_ip:9000;
    #  fastcgi_pass unix:/dev/shm/php-cgi.sock;
    #  fastcgi_index index.php;
    #  include fastcgi.conf;
    #}
    #location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico|woff|ttf|svg|woff2|eot)$ {
    #  expires 30d;
    #  access_log off;
    #}
    #location ~ .*\.(js|css)?$ {
    #  expires 7d;
    #  access_log off;
    #}
    #location ~ /\.ht {
    #  deny all;
    #}
  }
########################## ServerConf #############################
  include vhost/xingyun8888.conf;
  include vhost/waka66.conf;
  include vhost/test.fafa166.conf;
  include vhost/test.waka66.conf;
  include vhost/demo.fafa166.conf;
  include vhost/pma.fafa166.conf;
}
